// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/c0dered273/go-adv-metrics/internal/storage (interfaces: FileReaderWriter)

// Package mocks is a generated GoMock package.
package mocks

import (
	fs "io/fs"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFileReaderWriter is a mock of FileReaderWriter interface.
type MockFileReaderWriter struct {
	ctrl     *gomock.Controller
	recorder *MockFileReaderWriterMockRecorder
}

// MockFileReaderWriterMockRecorder is the mock recorder for MockFileReaderWriter.
type MockFileReaderWriterMockRecorder struct {
	mock *MockFileReaderWriter
}

// NewMockFileReaderWriter creates a new mock instance.
func NewMockFileReaderWriter(ctrl *gomock.Controller) *MockFileReaderWriter {
	mock := &MockFileReaderWriter{ctrl: ctrl}
	mock.recorder = &MockFileReaderWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFileReaderWriter) EXPECT() *MockFileReaderWriterMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockFileReaderWriter) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockFileReaderWriterMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockFileReaderWriter)(nil).Close))
}

// Read mocks base method.
func (m *MockFileReaderWriter) Read(arg0 []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockFileReaderWriterMockRecorder) Read(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockFileReaderWriter)(nil).Read), arg0)
}

// Seek mocks base method.
func (m *MockFileReaderWriter) Seek(arg0 int64, arg1 int) (int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Seek", arg0, arg1)
	ret0, _ := ret[0].(int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Seek indicates an expected call of Seek.
func (mr *MockFileReaderWriterMockRecorder) Seek(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Seek", reflect.TypeOf((*MockFileReaderWriter)(nil).Seek), arg0, arg1)
}

// Stat mocks base method.
func (m *MockFileReaderWriter) Stat() (fs.FileInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Stat")
	ret0, _ := ret[0].(fs.FileInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Stat indicates an expected call of Stat.
func (mr *MockFileReaderWriterMockRecorder) Stat() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Stat", reflect.TypeOf((*MockFileReaderWriter)(nil).Stat))
}

// Write mocks base method.
func (m *MockFileReaderWriter) Write(arg0 []byte) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Write indicates an expected call of Write.
func (mr *MockFileReaderWriterMockRecorder) Write(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*MockFileReaderWriter)(nil).Write), arg0)
}
